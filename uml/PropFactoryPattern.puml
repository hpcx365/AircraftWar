@startuml
' 道具工厂模式UML结构图 - 飞机大战游戏

' 定义接口和抽象类样式
skinparam interface {
  borderColor DeepSkyBlue
  borderWidth 2
}

skinparam abstract {
  borderColor DeepPink
  borderWidth 2
}

skinparam class {
  borderColor Black
  borderWidth 1
}

class Game {}

' 道具工厂模式结构
package "道具工厂模式" {
  interface PropFactory {
    +{abstract} BaseProp createProp()
  }
  
  class BulletPropFactory {
    +BaseProp createProp()
  }
  
  class BombPropFactory {
    +BaseProp createProp()
  }
  
  class HealthPropFactory {
    +BaseProp createProp()
  }

  abstract class BaseProp {
    #int speedX
    #int speedY
    #int locationX
    #int locationY
    +void forward()
    +{abstract} void takeEffect(HeroAircraft heroAircraft)
  }

  class BulletProp {
    -int numBullet
    +void takeEffect(HeroAircraft heroAircraft)
  }
  
  class BombProp {
    +void takeEffect(HeroAircraft heroAircraft)
  }
  
  class HealthProp {
    -int health
    +void takeEffect(HeroAircraft heroAircraft)
  }
}

' 继承关系
PropFactory <|-- BulletPropFactory
PropFactory <|-- BombPropFactory
PropFactory <|-- HealthPropFactory
BaseProp <|-- BulletProp
BaseProp <|-- BombProp
BaseProp <|-- HealthProp

' 使用关系
Game ..> PropFactory
Game ..> BaseProp
BulletPropFactory ..> BulletProp
BombPropFactory ..> BombProp
HealthPropFactory ..> HealthProp

note top of PropFactory
  工厂方法模式
  用于创建不同类型的道具
end note

@enduml
